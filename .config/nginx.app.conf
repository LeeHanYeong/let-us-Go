server {
    charset utf-8;

    location /health/ {
        set $my_host $host;
        if ($host ~ "\d+\.\d+\.\d+\.[\d\:]+") {
          set $my_host "health-check";
        }
        proxy_set_header    Host $http_host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect      off;
        proxy_pass          http://unix:/tmp/app.sock;
        access_log          /var/log/nginx/healthcheck.log;
    }
    location / {
        return 404;
    }
}

server {
    listen 80;
    listen 443;

    server_name localhost letusgo.ap-northeast-2.elasticbeanstalk.com letusgo.lhy.kr;

    charset utf-8;
    client_max_body_size 256M;
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 256;

    if ($http_x_forwarded_proto = 'http') {
        return 301 https://$host$request_uri;
    }

    location /health/ {
        set $my_host $host;
        if ($host ~ "\d+\.\d+\.\d+\.[\d\:]+") {
          set $my_host "health-check";
        }
        proxy_set_header    Host $http_host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect      off;
        proxy_pass          http://unix:/tmp/app.sock;
        access_log          /var/log/nginx/healthcheck.log;
    }

    location / {
        proxy_set_header    Host $http_host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect      off;
        proxy_pass          http://unix:/tmp/app.sock;
    }

    location /static/ {
        alias   /srv/master/.static/;
    }
    location /media/ {
        alias   /srv/master/.media/;
    }
}

server {
    listen 80;
    listen 443;

    server_name dev.localhost dev.letusgo.lhy.kr;

    charset utf-8;
    client_max_body_size 256M;
    proxy_headers_hash_max_size 512;
    proxy_headers_hash_bucket_size 256;

    if ($http_x_forwarded_proto = 'http') {
        return 301 https://$host$request_uri;
    }

    location / {
        proxy_set_header    Host $http_host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect      off;
        proxy_pass          http://unix:/tmp/app_dev.sock;
    }

    location /static/ {
        alias   /srv/dev/.static/;
    }
    location /media/ {
        alias   /srv/dev/.media/;
    }
}
